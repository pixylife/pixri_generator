{{define "UI-Basic-Form"}}
import 'package:flutter/material.dart';
import 'package:flutter_app_crud/src/api/profile_api_service.dart';
import 'package:flutter_app_crud/src/model/Profile.dart';

final GlobalKey<ScaffoldState> _scaffoldState = GlobalKey<ScaffoldState>();

class {{.Name}}FormView extends StatefulWidget {
  {{.Name}} {{.Name}};

  {{.Name}}FormView({this.{{.Name}}});

  @override
  _ {{.Name}}FormViewState createState() => _ {{.Name}}FormViewState();
}

class _ {{.Name}}FormViewState extends State< {{.Name}}FormView> {
  bool _isLoading = false;
  {{.Name}}ApiService _apiService = {{.Name}}ApiService();

   {{- range $v := .Fields}}
            bool _isField{{$v.FieldName}}Valid;
            TextEditingController _controller{{$v.FieldName}} = TextEditingController();
   {{- end}}

  @override
  void initState() {
    if (widget.{{.Name}} != null) {

     {{- range $v := .Fields}}
            _isField{{$v.FieldName}}Valid = true;
            _controller{{$v.FieldName}}.text = widget.{{$.Name}}.{{$v.FieldName}}.toString();
     {{- end}}
    }
    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      key: _scaffoldState,
      appBar: AppBar(
        iconTheme: IconThemeData(color: Colors.white),
        title: Text(
          widget.{{.Name}} == null ? "Add {{.Name}}" : "Edit {{.Name}}",
          style: TextStyle(color: Colors.white),
        ),
      ),
      body: Stack(
        children: <Widget>[
          Padding(
            padding: const EdgeInsets.all(16.0),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.stretch,
              children: <Widget>[
                 {{- range $v := .Fields}}
                        _buildTextField{{$v.FieldName}}(),
                 {{- end}}
                Padding(
                  padding: const EdgeInsets.only(top: 8.0),
                  child:  {{template "UI-RaisedButton" .}}
                )
              ],
            ),
          ),
          _isLoading
              ? Stack(
                  children: <Widget>[
                    Opacity(
                      opacity: 0.3,
                      child: ModalBarrier(
                        dismissible: false,
                        color: Colors.grey,
                      ),
                    ),
                    Center(
                      child: CircularProgressIndicator(),
                    ),
                  ],
                )
              : Container(),
        ],
      ),
    );
  }
   {{- range $v := .Fields}}
              {{template "UI-TextField" $v}}
    {{- end}}

 {{end}}
